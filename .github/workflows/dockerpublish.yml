name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: osmexport

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
        env:
          IMAGE_ID: $(echo docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME | tr '[A-Z]' '[a-z]') 

      - name: Build image
        run: |
          # Strip git ref prefix from version
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            # Strip "v" prefix from tag name
            VERSION=$(echo $VERSION | sed -e 's/^v//')
            LATEST_TAG="-tag ${IMAGE_NAME}:latest"
          else
            FULL_SHA=${{ github.sha }}
            SHA7=${FULL_SHA:0:7}
            VERSION="${BRANCH_NAME}_${SHA7}"
            LATEST_TAG=""
          fi
          
          TAG="--tag ${IMAGE_NAME}:${VERSION}"
          docker build . --file Dockerfile ${TAG} ${LATEST_TAG}

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: docker push $IMAGE_ID
